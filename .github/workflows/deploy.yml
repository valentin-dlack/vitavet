name: Deploy to Railway

on:
  push:
    branches: [main]
  # Remove pull_request trigger - we only want to deploy on merge to main

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
  RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
  NODE_ENV: test

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: |
          pnpm --filter api build
          pnpm --filter web build

      - name: Run tests
        run: |
          pnpm --filter api test
          pnpm --filter web test:run

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Link Railway project
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}

      - name: Deploy API to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        working-directory: apps/api
        run: railway up --detach

      - name: Deploy Web to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        working-directory: apps/web
        run: railway up --detach

      - name: Comment deployment URLs
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: services } = await github.rest.railway.services.list({
              project_id: process.env.RAILWAY_PROJECT_ID,
              headers: {
                'Authorization': `Bearer ${process.env.RAILWAY_TOKEN}`
              }
            });
            
            let comment = '## ðŸš€ Production Deployment Complete\n\n';
            comment += 'Your application has been deployed to production:\n\n';
            
            services.forEach(service => {
              if (service.domain) {
                comment += `- **${service.name}**: https://${service.domain}\n`;
              }
            });
            
            comment += '\n---\n*Deployed from commit: `' + process.env.GITHUB_SHA + '`*';
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
